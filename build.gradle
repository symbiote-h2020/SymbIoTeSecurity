// new plugins syntax
plugins {
    // code
    id "java"
    // spring
    id "io.spring.dependency-management" version "1.0.3.RELEASE"
    id 'org.springframework.boot' version '1.5.4.RELEASE'
    // code quality
    id "jacoco"
    id "org.owasp.dependencycheck" version "2.0.1"
    // IDEs
    id "eclipse"
    id "idea"
    // publishing
    id "com.cinnober.gradle.semver-git" version "2.2.2"
    id "maven-publish"
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

publishing {
    publications {
        maven(MavenPublication) {
            groupId = 'eu.h2020.symbiote'
            version = project.version
            from components.java
        }
    }
}

// dependencies section
repositories {
    mavenCentral()
}

// this is a library, not a runnable spring-boot jar, therefore
bootRepackage.enabled = false

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier 'sources'
    from sourceSets.main.allSource
}

task testsJar(type: Jar, dependsOn: classes) {
    classifier = "tests"
    from sourceSets.test.allSource
    from sourceSets.test.output
}

artifacts {
    archives sourcesJar
    archives testsJar
}

dependencies {
    compile('io.jsonwebtoken:jjwt:0.7.0')
    compile('org.bouncycastle:bcprov-jdk15on:1.56')
    compile('org.bouncycastle:bcpkix-jdk15on:1.56')

    // TODO think how to limit those dependecies...
    compile('com.fasterxml.jackson.core:jackson-annotations:2.8.7+')
    compile('org.springframework.data:spring-data-commons')
    compile group: 'com.netflix.feign', name: 'feign-jackson', version: '8.18.0'
    compile('org.springframework.amqp:spring-amqp')
    compile('org.springframework.amqp:spring-rabbit')

    // common testing
    testCompile('junit:junit:4.+')
    testCompile('org.springframework.boot:spring-boot-starter-test')
    testRuntime('org.springframework.boot:spring-boot-starter-web')
}

// code quality below
task generateJavaDocs(type: Javadoc) {
    source = sourceSets.main.allJava
    destinationDir = reporting.file("javadocs")
}

// jacoco configuration section
jacoco {
    toolVersion = "0.7.9"
}

jacocoTestReport {
    reports {
        xml.enabled = true
        html.enabled = true
    }
}

// owasp config
dependencyCheck {
    outputDirectory = file("$rootDir/build/reports/security")
}

// including code quality extensions into the build
check.dependsOn(jacocoTestReport, 'dependencyCheckAnalyze')