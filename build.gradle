buildscript {

    repositories {
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath group: 'com.cinnober.gradle', name: 'semver-git', version: '2.2.2'
        classpath 'org.owasp:dependency-check-gradle:3.0.2'
    }
}
// code
apply plugin: 'java'

// code quality
apply plugin: 'jacoco'
apply plugin: 'org.owasp.dependencycheck'

// IDEs
apply plugin: 'eclipse'
apply plugin: 'idea'

// publishing
apply plugin: 'com.cinnober.gradle.semver-git'
apply plugin: 'maven-publish'

sourceCompatibility = 1.8
targetCompatibility = 1.8

publishing {
    publications {
        mavenJava(MavenPublication) {
            groupId = 'eu.h2020.symbiote'
            version = project.version
            from components.java

            artifact sourceJar {
                classifier "sources"
            }
        }
    }
}

task sourceJar(type: Jar) {
    from sourceSets.main.allJava
}

// dependencies section
repositories {
    mavenCentral()
}

dependencies {
    compile('io.jsonwebtoken:jjwt:0.7+')
    compile('org.bouncycastle:bcprov-jdk15on:1.56+')
    compile('org.bouncycastle:bcpkix-jdk15on:1.56+')
    compile('io.github.openfeign:feign-jackson:9.5.1')
    compile('commons-logging:commons-logging:1.2+')

    // common testing
    testCompile('junit:junit:4.+')
    testCompile('org.powermock:powermock-api-mockito:1.6.4')
    testCompile('org.powermock:powermock-core:1.6.4')
    testCompile('org.powermock:powermock-module-junit4:1.6.4')
}

// code quality below
task generateJavaDocs(type: Javadoc) {
    source = sourceSets.main.allJava
    destinationDir = reporting.file("javadocs")
}

// jacoco configuration section
jacoco {
    toolVersion = "0.7.9"
}

jacocoTestReport {
    reports {
        xml.enabled = true
        html.enabled = true
    }
}


test {
    testLogging {
        exceptionFormat = 'full'
    }
}

// owasp config
dependencyCheck {
    outputDirectory = file("$rootDir/build/reports/security")
}

// including code quality extensions into the build
check.dependsOn(jacocoTestReport)//, 'dependencyCheckAnalyze')

task buildRunnablePAAMKeystoreFactoryJAR(type: Jar) {
    manifest {
        attributes 'Implementation-Title': 'Build Runnable PAAM Keystore Factory JAR',
            'Implementation-Version': version,
            'Main-Class': 'eu.h2020.symbiote.security.helpers.PlatformAAMCertificateKeyStoreFactory'
    }
    baseName = project.name + '-all'
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
exclude 'META-INF/*.RSA', 'META-INF/*.SF','META-INF/*.DSA' 
    with jar
}