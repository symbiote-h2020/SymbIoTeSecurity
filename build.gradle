buildscript {

    repositories {
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath group: 'com.cinnober.gradle', name: 'semver-git', version: '2.2.2'
        classpath 'org.owasp:dependency-check-gradle:3.0.2'
    }
}
// code
apply plugin: 'java'

// code quality
apply plugin: 'jacoco'
apply plugin: 'org.owasp.dependencycheck'

// IDEs
apply plugin: 'eclipse'
apply plugin: 'idea'

// publishing
apply plugin: 'com.cinnober.gradle.semver-git'
apply plugin: 'maven-publish'

sourceCompatibility = 1.8
targetCompatibility = 1.8
version = 'SNAPSHOT'

// dependencies section
repositories {
    mavenCentral()
    jcenter()
}

dependencies {
    compile('io.jsonwebtoken:jjwt:[0.9, 0.9.999]')
    compile('org.bouncycastle:bcprov-jdk15on:[1.56, 1.999]')
    compile('org.bouncycastle:bcpkix-jdk15on:[1.56, 1.999]')
    compile('io.github.openfeign:feign-jackson:[9.5.1, 9.999]')
    compile('commons-logging:commons-logging:[1.2, 1.999]')

    // JDK 9 runtime fixes
    if(JavaVersion.current() == JavaVersion.VERSION_1_9){
        runtime('javax.xml.bind:jaxb-api:[2.3.0, 2.3.999]')
    }

    // common testing
    testCompile('junit:junit:[4.12, 4.999]')
    testCompile('org.powermock:powermock-api-mockito2:[2.0, 2.999]')
    testCompile('org.powermock:powermock-core:[2.0, 2.999]')
    testCompile('org.powermock:powermock-module-junit4:[2.0, 2.999]')
}

// sources and javadocs
task sourceJar(type: Jar) {
    from sourceSets.main.allJava
}

task generateJavaDocs(type: Javadoc) {
    source = sourceSets.main.allJava
    classpath = configurations.compileClasspath
    destinationDir = reporting.file("javadocs")
}

task javadocJar(type: Jar, dependsOn: generateJavaDocs) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

task buildRunnablePAAMKeystoreFactoryJAR(type: Jar) {
    manifest {
        attributes 'Implementation-Title': 'Build Runnable PAAM Keystore Factory JAR',
            'Implementation-Version': version,
            'Main-Class': 'eu.h2020.symbiote.security.helpers.PlatformAAMCertificateKeyStoreFactory'
    }
    baseName = project.name + '-helper'
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
	exclude 'META-INF/*.RSA', 'META-INF/*.SF','META-INF/*.DSA' 
    with jar
}

artifacts {
    archives sourceJar
    archives javadocJar
    archives buildRunnablePAAMKeystoreFactoryJAR
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            groupId = 'eu.h2020.symbiote'
            version = project.version
            from components.java

            artifact sourceJar {
                classifier "sources"
            }
            artifact javadocJar
        }
    }
}

// code quality below

// jacoco configuration section
jacoco {
    toolVersion = "0.7.9"
}

jacocoTestReport {
    reports {
        xml.enabled = true
        html.enabled = true
    }
}


test {
    testLogging {
        exceptionFormat = 'full'
    }
}

// owasp config
dependencyCheck {
    outputDirectory = file("$rootDir/build/reports/security")
}

// including code quality extensions into the build
check.dependsOn(jacocoTestReport, 'dependencyCheckAnalyze')